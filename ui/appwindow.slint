import { Button, VerticalBox, HorizontalBox, GroupBox } from "std-widgets.slint";


struct pieceData {
    playerr_piece: int,
}

component piece inherits Rectangle {
    callback clicked;
    in property <int> player_piece: 0; // 0 (no player), 1 (player 1), 2 (player 2)

    width: 50px;
    height: 50px;
    background: player_piece == 1 ? #ff0000 : player_piece == 2 ? #0000ff : #ffffff;
    animate background { duration: 10ms; }

    TouchArea {
        clicked => {
            // Delegate to the user of this element
            root.clicked();
        }
    }
}


export component AppWindow inherits Window {
    // in_out property <int> counter: 0;
    in-out property <int> player: 0;
    in-out property <int> player_type: 0;
    in-out property <int> player_1_type: 0;
    in-out property <int> player_2_type: 0;
    in-out property <[[int]]> board: [[0]];

    in property <[pieceData]> pieces: [
        { playerr_piece: 0 },
    ];

    callback set_player_type();
    callback request_run_game();
    callback clicked_board_box(int);

    default-font-size: 15px;
    VerticalBox {
        Text {
            text: 
                "player: 1, player type: \{root.player_1_type} \n" + 
                "player: 2, player type: \{root.player_2_type} \n\n" +
                "Select player \{root.player+1} type:";
        }
        HorizontalBox {
            Button {
                text: "Random";
                clicked => {
                    root.player_type = 0;
                    root.player = Math.mod(root.player + 1, 2);
                    root.set_player_type();
                }
            }
            Button {
                text: "Human";
                clicked => {
                    root.player_type = 1;
                    root.player = Math.mod(root.player + 1, 2);
                    root.set_player_type();
                }
            }
            Button {
                text: "Bot";
                clicked => {
                    root.player_type = 2;
                    root.player = Math.mod(root.player + 1, 2);
                    root.set_player_type();
                }
            }
            Button {
                text: "Bit Bot";
                clicked => {
                    root.player_type = 3;
                    root.player = Math.mod(root.player + 1, 2);
                    root.set_player_type();
                }
            }
            Button {
                text: "Bit Bot 2";
                clicked => {
                    root.player_type = 4;
                    root.player = Math.mod(root.player + 1, 2);
                    root.set_player_type();
                }
            }
        }
        // Text {
        //     text: 
        //         "\{root.board[0][0]} \{root.board[0][1]} \{root.board[0][2]} \{root.board[0][3]} \{root.board[0][4]} \{root.board[0][5]} \{root.board[0][6]} \n" +
        //         "\{root.board[1][0]} \{root.board[1][1]} \{root.board[1][2]} \{root.board[1][3]} \{root.board[1][4]} \{root.board[1][5]} \{root.board[1][6]} \n" +
        //         "\{root.board[2][0]} \{root.board[2][1]} \{root.board[2][2]} \{root.board[2][3]} \{root.board[2][4]} \{root.board[2][5]} \{root.board[2][6]} \n" +
        //         "\{root.board[3][0]} \{root.board[3][1]} \{root.board[3][2]} \{root.board[3][3]} \{root.board[3][4]} \{root.board[3][5]} \{root.board[3][6]} \n" +
        //         "\{root.board[4][0]} \{root.board[4][1]} \{root.board[4][2]} \{root.board[4][3]} \{root.board[4][4]} \{root.board[4][5]} \{root.board[4][6]} \n" +
        //         "\{root.board[5][0]} \{root.board[5][1]} \{root.board[5][2]} \{root.board[5][3]} \{root.board[5][4]} \{root.board[5][5]} \{root.board[5][6]} \n";
        // }
        // make a 6x7 grid of pieces
        // Text {  // test
        //     text: 
        //         "test counter: \{root.counter} \n";
        // }
        Rectangle {
            x: 0px;
            width: 420px;
            height: 360px;
            for p[i] in pieces : piece {
                x: Math.mod(i, 7) * 60px;
                y: Math.floor(i / 7) * 60px;
                width: 50px;
                height: 50px;
                player_piece: board[Math.floor(i / 7)][Math.mod(i, 7)];
                // player_piece: p.playerr_piece;
                clicked => {
                    p.playerr_piece = Math.mod(p.playerr_piece + 1, 3);
                    // root.counter = root.counter + 1;
                    root.clicked_board_box(Math.mod(i, 7));
                }
            }
        }
        Button {
            text: "start game";
            clicked => {
                root.request_run_game();
            }
        }
    }
}



